В качестве инструмента анализа был выбран jconsole, чтобы была возможность наблюдать
за динамикой заполнения памяти в реальном времени.

Для проверки был создан клон StartUI - ProfilingTrackerUI в который были добавлены методы на добавление
указанного числа заявок, а так же метод с бесконечным циклом while, чтобы добиться заполнения памяти до отказа.

В файле под наванием **Garbage Collection** можно наблюдать стандартную работу сборщика мусора(фиолетовый),
а так же реакцию на вызов команды PerformGC, при этом в программе не выполнялось никаких действий, кроме
её непосредственного запуска.

В файле **Memory Flood Start** можно наблюдать старт команды с бесконечным циклом по добавлению заявок.

В файле **OutOfMemoryError** стоит отметить несколько моментов, красными кругами отмечены два момента:
 1) - добавление 1.000.000 заявок
 2) - запуск бесконечного цикла
Далее можем наблюдать запонение Heap памяти, выход на плато 4-GB,
красной линией отмечена OutOfMemoryError, программа завершила работу.